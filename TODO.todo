To generate the list of timeseries and keep it updates,
read.csv - file can also be a complete URL. (For the supported URL schemes, see the ‘URLs’ section of the help for url.)
Use Javascript and KiWIS to generate a full list of timeseries and save it as a csv to a folder on the webserver.
Run the script every morning, to update the csv document.
Have read.csv check the url of that file to generate the csv list.

Use this, but reverse it so it checks the web first and otherwise loads a local file
input <- if (file.exists("flights14.csv")) {
   "flights14.csv"
} else {
  "https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv"
}

Steps:
- Read a CSV document to create a list of all timeseries
- Filter the timeseries as Juraj has asked to return a ts id
- (optional) datepicker to determine start and end dates
- Generate the kiwis call code for execution

select.list: graphics
logical: should a graphical widget be used?

Consider?:
R Shiny

ki_timeseries_values(
	ts_id = "1125831042",
	start_date = "2015-12-01",
	end_date = "2018-01-01"
)

Read the CSV
load the column into a list of unique values
filter/search the list and get a selection
Repeat with a search of the next column, and so on until you have chosen a timeseries
Use that ID to call KiWIS
